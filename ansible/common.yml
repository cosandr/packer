---

- name: Localhost actions
  hosts: all
  become: false
  gather_facts: false
  tasks:
    - name: Clear host SSH keys
      delegate_to: localhost
      ansible.builtin.command: "ssh-keygen -R {{ ansible_host }}"
      ignore_errors: true

- name: Basic provisioning
  hosts: all
  become: true
  vars:
    dnf_automatic_timer_enabled: true
    dnf_automatic_upgrade_type: "security"
    dnf_automatic_apply_updates: true
    dnf_automatic_download_updates: true
    unattended_remove_unused_dependencies: true
    unattended_remove_new_unused_dependencies: true
    unattended_automatic_reboot: false
  pre_tasks:
    - name: Check for grub config
      ansible.builtin.stat:
        path: "/etc/default/grub"
      register: __grub_conf

    - name: Look for grub.cfg
      ansible.builtin.find:
        paths: /boot/efi/EFI
        patterns: 'grub.cfg'
        recurse: true
      register: __grub_search

    - name: Set grub.cfg path
      ansible.builtin.set_fact:
        grub_cfg_path: "{{ __grub_search.files[0].path }}"
      when: __grub_search.matched > 0

  roles:
    - role: cosandr.unattended-upgrades
      when: ansible_os_family == 'Debian'

    - role: cosandr.dnf_automatic
      when: ansible_os_family == 'RedHat'

  tasks:
    - name: Update all packages (RedHat)  # noqa package-latest
      ansible.builtin.dnf:
        name: '*'
        state: latest
        update_cache: true
      when: ansible_os_family == 'RedHat'

    - name: Update all packages (Debian)  # noqa package-latest
      ansible.builtin.apt:
        name: "*"
        state: latest
        update_cache: true
        autoclean: true
        autoremove: true
      when: ansible_os_family == 'Debian'

    - name: Install some packages
      ansible.builtin.package:
        name:
          - bash-completion
          - glibc-locale-source
          - glibc-langpack-en
        state: present

    - name: Install grow-rootfs script
      ansible.builtin.copy:
        src: grow-rootfs.sh
        dest: /usr/bin/grow-rootfs
        owner: root
        group: root
        mode: 0755

    - name: Install grow-rootfs service
      ansible.builtin.copy:
        src: grow-rootfs.service
        dest: "/etc/systemd/system/grow-rootfs.service"
        owner: root
        group: root
        mode: 0644
      notify: Enable grow-rootfs

    - name: Reduce grub timeout
      ansible.builtin.lineinfile:
        dest: "/etc/default/grub"
        regexp: '^GRUB_TIMEOUT'
        line: "GRUB_TIMEOUT=2"
        state: present
      when: __grub_conf.stat.exists
      notify: Regenerate grub

    - name: Disable virtual terminals allocation by logind
      ansible.builtin.lineinfile:
        dest: '/etc/systemd/logind.conf'
        regexp: '^#?NAutoVTs='
        line: 'NAutoVTs=0'
        state: present

    - name: Install root keys
      ansible.posix.authorized_key:
        user: root
        state: present
        key: "{{ lookup('file', 'authorized_keys') }}"

    - name: Set more secure root password
      ansible.builtin.user:
        name: root
        password: '$6$UEcjS6FuN34m0LNh$keSth27mGIKRgk4goS.SZJRJX4WlP71wRf8hsHVlRbnhA1NC3QRSPanqyUWC26SDAvZyyiaE2n1dMUSVe6VcJ1'

  handlers:
    - name: Enable grow-rootfs
      ansible.builtin.systemd:
        daemon_reload: true
        name: grow-rootfs.service
        enabled: true

    - name: Regenerate grub
      ansible.builtin.command: "grub2-mkconfig -o {{ grub_cfg_path }}"
      when: "grub_cfg_path is defined"
